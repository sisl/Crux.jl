name: CI

# Run on master, tags, or any pull request
on:
  push:
    branches: [master]
    tags: ["*"]
  pull_request:

jobs:
  # unit tests with coverage
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.11" # Latest
        os:
          - ubuntu-latest
          - windows-latest
        arch:
          - x64
    steps:
      # # install CUDA
      # - uses: Jimver/cuda-toolkit@v0.2.4
      #   id: cuda-toolkit
      #   with:
      #     cuda: '11.2.2'

      # check out the project and install Julia
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      # - run: pip install gym
      # - run: julia --color=yes --project -e 'using Pkg; pkg"add https://github.com/ancorso/POMDPGym.jl"; Pkg.instantiate()'
      # using a cache can speed up execution times
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-${{ matrix.arch }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.arch }}-test-
            ${{ runner.os }}-${{ matrix.arch }}-
            ${{ runner.os }}-

      # build the depencies, run the tests, and upload coverage results
      - uses: julia-actions/julia-buildpkg@latest
      - run: |
          git config --global user.name Tester
          git config --global user.email te@st.er
      - name: Run Tests
        uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
          flags: unittests
          name: codecov-umbrella
  docs:
    name: 'Documentation: ${{ matrix.format }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        format:
          - html
    steps:
      - uses: actions/checkout@v5
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Build the manual
        run: julia --project=docs/ -e 'using Pkg;
                                       pkg"add Crux";
                                       pkg"instantiate";
                                       Pkg.develop(PackageSpec(path=pwd()))'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          DOCUMENTER_LATEX_DEBUG: ${{ github.workspace }}/latex-debug-logs
      - name: Upload search index
        if: ${{ matrix.format == 'html' }}
        uses: actions/upload-artifact@v4
        with:
          name: search-index
          path: docs/build/search_index.js